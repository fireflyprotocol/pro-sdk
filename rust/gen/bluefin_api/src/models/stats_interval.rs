/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum StatsInterval {
    #[serde(rename = "1d")]
    Variant1d,
    #[serde(rename = "1w")]
    Variant1w,
    #[serde(rename = "1Mo")]
    Variant1Mo,
    #[serde(rename = "UNSPECIFIED")]
    Unspecified,

}

impl std::fmt::Display for StatsInterval {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Variant1d => write!(f, "1d"),
            Self::Variant1w => write!(f, "1w"),
            Self::Variant1Mo => write!(f, "1Mo"),
            Self::Unspecified => write!(f, "UNSPECIFIED"),
        }
    }
}

impl Default for StatsInterval {
    fn default() -> StatsInterval {
        Self::Variant1d
    }
}

