/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FailedCommandType {
    #[serde(rename = "POSITION_ISOLATED_MARGIN_UPDATE")]
    PositionIsolatedMarginUpdate,
    #[serde(rename = "POSITION_LEVERAGE_UPDATE")]
    PositionLeverageUpdate,
    #[serde(rename = "WITHDRAW")]
    Withdraw,

}

impl std::fmt::Display for FailedCommandType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::PositionIsolatedMarginUpdate => write!(f, "POSITION_ISOLATED_MARGIN_UPDATE"),
            Self::PositionLeverageUpdate => write!(f, "POSITION_LEVERAGE_UPDATE"),
            Self::Withdraw => write!(f, "WITHDRAW"),
        }
    }
}

impl Default for FailedCommandType {
    fn default() -> FailedCommandType {
        Self::PositionIsolatedMarginUpdate
    }
}

