/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AccountEventReason : The reason for the account-related event.
/// The reason for the account-related event.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AccountEventReason {
    #[serde(rename = "Deposit")]
    Deposit,
    #[serde(rename = "Withdraw")]
    Withdraw,
    #[serde(rename = "OrderCreated")]
    OrderCreated,
    #[serde(rename = "OrderMatched")]
    OrderMatched,
    #[serde(rename = "OrderCancelled")]
    OrderCancelled,
    #[serde(rename = "OrdersForMarketCancelled")]
    OrdersForMarketCancelled,
    #[serde(rename = "LeverageUpdated")]
    LeverageUpdated,

}

impl std::fmt::Display for AccountEventReason {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Deposit => write!(f, "Deposit"),
            Self::Withdraw => write!(f, "Withdraw"),
            Self::OrderCreated => write!(f, "OrderCreated"),
            Self::OrderMatched => write!(f, "OrderMatched"),
            Self::OrderCancelled => write!(f, "OrderCancelled"),
            Self::OrdersForMarketCancelled => write!(f, "OrdersForMarketCancelled"),
            Self::LeverageUpdated => write!(f, "LeverageUpdated"),
        }
    }
}

impl Default for AccountEventReason {
    fn default() -> AccountEventReason {
        Self::Deposit
    }
}

