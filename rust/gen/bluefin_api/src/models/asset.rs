/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Asset {
    /// On-chain address of the asset bank on the blockchain.
    #[serde(rename = "symbol")]
    pub symbol: String,
    /// Asset quantity (e9 format).
    #[serde(rename = "quantityE9")]
    pub quantity_e9: String,
    /// Value of this asset balance based on current market price and asset weight (e9 format).
    #[serde(rename = "effectiveBalanceE9")]
    pub effective_balance_e9: String,
    /// Maximum quantity for transfer out (e9 format).
    #[serde(rename = "maxWithdrawQuantityE9")]
    pub max_withdraw_quantity_e9: String,
    /// Last update time in milliseconds since Unix epoch.
    #[serde(rename = "lastUpdatedAtMillis")]
    pub last_updated_at_millis: i64,
}

impl Asset {
    pub fn new(symbol: String, quantity_e9: String, effective_balance_e9: String, max_withdraw_quantity_e9: String, last_updated_at_millis: i64) -> Asset {
        Asset {
            symbol,
            quantity_e9,
            effective_balance_e9,
            max_withdraw_quantity_e9,
            last_updated_at_millis,
        }
    }
}

