/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CandlePriceType {
    #[serde(rename = "Last")]
    Last,
    #[serde(rename = "Market")]
    Market,
    #[serde(rename = "Oracle")]
    Oracle,
    #[serde(rename = "UNSPECIFIED")]
    Unspecified,

}

impl std::fmt::Display for CandlePriceType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Last => write!(f, "Last"),
            Self::Market => write!(f, "Market"),
            Self::Oracle => write!(f, "Oracle"),
            Self::Unspecified => write!(f, "UNSPECIFIED"),
        }
    }
}

impl Default for CandlePriceType {
    fn default() -> CandlePriceType {
        Self::Last
    }
}

