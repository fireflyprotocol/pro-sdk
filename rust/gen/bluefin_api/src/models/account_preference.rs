/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AccountPreference {
    /// User preferred language.
    #[serde(rename = "language", skip_serializing_if = "Option::is_none")]
    pub language: Option<String>,
    /// User preferred theme.
    #[serde(rename = "theme", skip_serializing_if = "Option::is_none")]
    pub theme: Option<String>,
    #[serde(rename = "market", skip_serializing_if = "Option::is_none")]
    pub market: Option<Vec<models::AccountMarketPreference>>,
}

impl AccountPreference {
    pub fn new() -> AccountPreference {
        AccountPreference {
            language: None,
            theme: None,
            market: None,
        }
    }
}

