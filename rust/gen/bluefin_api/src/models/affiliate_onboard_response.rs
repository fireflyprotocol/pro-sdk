/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AffiliateOnboardResponse {
    /// Status of the application
    #[serde(rename = "status")]
    pub status: Status,
    /// Response message including rejection reason if application was rejected
    #[serde(rename = "message")]
    pub message: String,
}

impl AffiliateOnboardResponse {
    pub fn new(status: Status, message: String) -> AffiliateOnboardResponse {
        AffiliateOnboardResponse {
            status,
            message,
        }
    }
}
/// Status of the application
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "APPROVED")]
    Approved,
    #[serde(rename = "REJECTED")]
    Rejected,
    #[serde(rename = "PENDING")]
    Pending,
}

impl Default for Status {
    fn default() -> Status {
        Self::Approved
    }
}

