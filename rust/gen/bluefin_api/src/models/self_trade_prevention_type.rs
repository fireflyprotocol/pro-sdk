/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SelfTradePreventionType : The strategy used to resolve self trades.   TAKER: On a self trade, the taker order will be cancelled  MAKER: On a self trade, the maker order will be cancelled  BOTH: On a self trade, both the taker and the maker order will be cancelled 
/// The strategy used to resolve self trades.   TAKER: On a self trade, the taker order will be cancelled  MAKER: On a self trade, the maker order will be cancelled  BOTH: On a self trade, both the taker and the maker order will be cancelled 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SelfTradePreventionType {
    #[serde(rename = "TAKER")]
    Taker,
    #[serde(rename = "MAKER")]
    Maker,
    #[serde(rename = "BOTH")]
    Both,

}

impl std::fmt::Display for SelfTradePreventionType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Taker => write!(f, "TAKER"),
            Self::Maker => write!(f, "MAKER"),
            Self::Both => write!(f, "BOTH"),
        }
    }
}

impl Default for SelfTradePreventionType {
    fn default() -> SelfTradePreventionType {
        Self::Taker
    }
}

