/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MarketStatus {
    #[serde(rename = "ACTIVE")]
    Active,
    #[serde(rename = "BETA")]
    Beta,
    #[serde(rename = "MAINTENANCE")]
    Maintenance,
    #[serde(rename = "DELISTED")]
    Delisted,
    #[serde(rename = "UNSPECIFIED")]
    Unspecified,

}

impl std::fmt::Display for MarketStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Active => write!(f, "ACTIVE"),
            Self::Beta => write!(f, "BETA"),
            Self::Maintenance => write!(f, "MAINTENANCE"),
            Self::Delisted => write!(f, "DELISTED"),
            Self::Unspecified => write!(f, "UNSPECIFIED"),
        }
    }
}

impl Default for MarketStatus {
    fn default() -> MarketStatus {
        Self::Active
    }
}

