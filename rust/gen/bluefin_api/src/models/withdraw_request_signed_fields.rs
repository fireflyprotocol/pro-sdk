/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WithdrawRequestSignedFields {
    /// Asset symbol of the withdrawn asset
    #[serde(rename = "assetSymbol")]
    pub asset_symbol: String,
    /// The Account Address from which to withdraw assets
    #[serde(rename = "accountAddress")]
    pub account_address: String,
    /// The amount in e9 of the asset that the User will withdraw from their account
    #[serde(rename = "amountE9")]
    pub amount_e9: String,
    /// A uniqueness modifier for the request. This is added to guarantee uniqueness of the request. Usually a mix of timestamp and a random number
    #[serde(rename = "salt")]
    pub salt: String,
    /// the ID of the external datastore for the target network
    #[serde(rename = "edsId")]
    pub eds_id: String,
    /// The timestamp in milliseconds when the HTTP Request payload has been signed
    #[serde(rename = "signedAtMillis")]
    pub signed_at_millis: i64,
}

impl WithdrawRequestSignedFields {
    pub fn new(asset_symbol: String, account_address: String, amount_e9: String, salt: String, eds_id: String, signed_at_millis: i64) -> WithdrawRequestSignedFields {
        WithdrawRequestSignedFields {
            asset_symbol,
            account_address,
            amount_e9,
            salt,
            eds_id,
            signed_at_millis,
        }
    }
}

