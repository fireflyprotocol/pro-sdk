/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AffiliateSummary {
    /// The user's wallet address
    #[serde(rename = "userAddress")]
    pub user_address: String,
    /// Total number of referees
    #[serde(rename = "totalReferredUsers")]
    pub total_referred_users: i32,
    /// Total earnings in e9 format
    #[serde(rename = "totalEarningsE9")]
    pub total_earnings_e9: String,
    /// Ranking in perps trading category
    #[serde(rename = "perpsRanking")]
    pub perps_ranking: i32,
    /// Ranking in spot trading category
    #[serde(rename = "spotRanking")]
    pub spot_ranking: i32,
    /// Ranking in lending category
    #[serde(rename = "lendRanking")]
    pub lend_ranking: i32,
}

impl AffiliateSummary {
    pub fn new(user_address: String, total_referred_users: i32, total_earnings_e9: String, perps_ranking: i32, spot_ranking: i32, lend_ranking: i32) -> AffiliateSummary {
        AffiliateSummary {
            user_address,
            total_referred_users,
            total_earnings_e9,
            perps_ranking,
            spot_ranking,
            lend_ranking,
        }
    }
}

