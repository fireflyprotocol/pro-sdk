/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetAffiliateIntervalOverview200Response {
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<models::AffiliateIntervalOverview>>,
    /// Total number of records
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i32>,
    /// The page size for pagination
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    /// The page number for pagination
    #[serde(rename = "page", skip_serializing_if = "Option::is_none")]
    pub page: Option<i32>,
}

impl GetAffiliateIntervalOverview200Response {
    pub fn new() -> GetAffiliateIntervalOverview200Response {
        GetAffiliateIntervalOverview200Response {
            data: None,
            total: None,
            limit: None,
            page: None,
        }
    }
}

