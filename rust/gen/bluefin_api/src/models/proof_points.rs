/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ProofPoints : The generated zero-knowledge proof points.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProofPoints {
    /// Point A of the proof.
    #[serde(rename = "a")]
    pub a: Vec<String>,
    /// Point B of the proof.
    #[serde(rename = "b")]
    pub b: Vec<Vec<String>>,
    /// Point C of the proof.
    #[serde(rename = "c")]
    pub c: Vec<String>,
}

impl ProofPoints {
    /// The generated zero-knowledge proof points.
    pub fn new(a: Vec<String>, b: Vec<Vec<String>>, c: Vec<String>) -> ProofPoints {
        ProofPoints {
            a,
            b,
            c,
        }
    }
}

