/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MarketSubscriptionStreams : Represents the type of market data stream and its parameters.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MarketSubscriptionStreams {
    /// The symbol of the market stream to subscribe to (Leave empty for TickerAll stream)
    #[serde(rename = "symbol")]
    pub symbol: String,
    #[serde(rename = "streams")]
    pub streams: Vec<models::MarketDataStreamName>,
}

impl MarketSubscriptionStreams {
    /// Represents the type of market data stream and its parameters.
    pub fn new(symbol: String, streams: Vec<models::MarketDataStreamName>) -> MarketSubscriptionStreams {
        MarketSubscriptionStreams {
            symbol,
            streams,
        }
    }
}

