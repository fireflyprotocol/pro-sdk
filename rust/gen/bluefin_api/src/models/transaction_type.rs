/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TransactionType : The type of transaction.
/// The type of transaction.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TransactionType {
    #[serde(rename = "DEPOSIT")]
    Deposit,
    #[serde(rename = "WITHDRAW")]
    Withdraw,
    #[serde(rename = "REALIZED_PNL")]
    RealizedPnl,
    #[serde(rename = "FUNDING_FEE")]
    FundingFee,
    #[serde(rename = "TRADING_FEE")]
    TradingFee,
    #[serde(rename = "TRADING_GAS_FEE")]
    TradingGasFee,

}

impl std::fmt::Display for TransactionType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Deposit => write!(f, "DEPOSIT"),
            Self::Withdraw => write!(f, "WITHDRAW"),
            Self::RealizedPnl => write!(f, "REALIZED_PNL"),
            Self::FundingFee => write!(f, "FUNDING_FEE"),
            Self::TradingFee => write!(f, "TRADING_FEE"),
            Self::TradingGasFee => write!(f, "TRADING_GAS_FEE"),
        }
    }
}

impl Default for TransactionType {
    fn default() -> TransactionType {
        Self::Deposit
    }
}

