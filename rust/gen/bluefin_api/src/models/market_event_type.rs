/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MarketEventType : The type of event communicated in the WebSocket message.
/// The type of event communicated in the WebSocket message.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MarketEventType {
    #[serde(rename = "RecentTradesUpdates")]
    RecentTradesUpdates,
    #[serde(rename = "TickerUpdate")]
    TickerUpdate,
    #[serde(rename = "TickerAllUpdate")]
    TickerAllUpdate,
    #[serde(rename = "OraclePriceUpdate")]
    OraclePriceUpdate,
    #[serde(rename = "MarkPriceUpdate")]
    MarkPriceUpdate,
    #[serde(rename = "MarketPriceUpdate")]
    MarketPriceUpdate,
    #[serde(rename = "CandlestickUpdate")]
    CandlestickUpdate,
    #[serde(rename = "OrderbookDiffDepthUpdate")]
    OrderbookDiffDepthUpdate,
    #[serde(rename = "OrderbookPartialDepthUpdate")]
    OrderbookPartialDepthUpdate,

}

impl std::fmt::Display for MarketEventType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::RecentTradesUpdates => write!(f, "RecentTradesUpdates"),
            Self::TickerUpdate => write!(f, "TickerUpdate"),
            Self::TickerAllUpdate => write!(f, "TickerAllUpdate"),
            Self::OraclePriceUpdate => write!(f, "OraclePriceUpdate"),
            Self::MarkPriceUpdate => write!(f, "MarkPriceUpdate"),
            Self::MarketPriceUpdate => write!(f, "MarketPriceUpdate"),
            Self::CandlestickUpdate => write!(f, "CandlestickUpdate"),
            Self::OrderbookDiffDepthUpdate => write!(f, "OrderbookDiffDepthUpdate"),
            Self::OrderbookPartialDepthUpdate => write!(f, "OrderbookPartialDepthUpdate"),
        }
    }
}

impl Default for MarketEventType {
    fn default() -> MarketEventType {
        Self::RecentTradesUpdates
    }
}

