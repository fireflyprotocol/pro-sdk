/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OnboardAffiliateRequest {
    /// Referral code of the parent affiliate
    #[serde(rename = "parentReferralCode", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub parent_referral_code: Option<Option<String>>,
    /// Name of the applicant
    #[serde(rename = "name")]
    pub name: String,
    /// Email address of the applicant
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "socialUserNames", skip_serializing_if = "Option::is_none")]
    pub social_user_names: Option<models::OnboardAffiliateRequestSocialUserNames>,
}

impl OnboardAffiliateRequest {
    pub fn new(name: String, email: String) -> OnboardAffiliateRequest {
        OnboardAffiliateRequest {
            parent_referral_code: None,
            name,
            email,
            social_user_names: None,
        }
    }
}

