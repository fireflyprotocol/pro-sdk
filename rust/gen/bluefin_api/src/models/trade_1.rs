/*
 * Bluefin API
 *
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Trade1 {
    /// Trade ID
    #[serde(rename = "id")]
    pub id: i64,
    /// Market symbol.
    #[serde(rename = "symbol")]
    pub symbol: String,
    /// Trade price (e9 format).
    #[serde(rename = "priceE9")]
    pub price_e9: String,
    /// Trade quantity (e9 format).
    #[serde(rename = "quantityE9")]
    pub quantity_e9: String,
    /// Trade quote quantity (e9 format).
    #[serde(rename = "quoteQuantityE9")]
    pub quote_quantity_e9: String,
    #[serde(rename = "side")]
    pub side: models::TradeSide,
    /// Trade timestamp.
    #[serde(rename = "timeAtUtcMillis")]
    pub time_at_utc_millis: i64,
}

impl Trade1 {
    pub fn new(id: i64, symbol: String, price_e9: String, quantity_e9: String, quote_quantity_e9: String, side: models::TradeSide, time_at_utc_millis: i64) -> Trade1 {
        Trade1 {
            id,
            symbol,
            price_e9,
            quantity_e9,
            quote_quantity_e9,
            side,
            time_at_utc_millis,
        }
    }
}

