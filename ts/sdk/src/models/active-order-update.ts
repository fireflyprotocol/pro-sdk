/* tslint:disable */
/* eslint-disable */
/**
 * Bluefin API
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { OrderStatus } from './order-status';
// May contain unused imports in some cases
// @ts-ignore
import type { OrderTimeInForce } from './order-time-in-force';
// May contain unused imports in some cases
// @ts-ignore
import type { OrderType } from './order-type';
// May contain unused imports in some cases
// @ts-ignore
import type { SelfTradePreventionType } from './self-trade-prevention-type';
// May contain unused imports in some cases
// @ts-ignore
import type { TradeSide } from './trade-side';

/**
 * Information about an order update.
 * @export
 * @interface ActiveOrderUpdate
 */
export interface ActiveOrderUpdate {
    /**
     * The unique hash of the order.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'orderHash': string;
    /**
     * The client-provided order ID.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'clientOrderId'?: string;
    /**
     * The symbol of the market.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'symbol': string;
    /**
     * The address of the account.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'accountAddress': string;
    /**
     * The price of the order in scientific notation with 9 decimal places.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'priceE9': string;
    /**
     * The quantity of the order in scientific notation with 9 decimal places.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'quantityE9': string;
    /**
     * The filled quantity of the order in scientific notation with 9 decimal places.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'filledQuantityE9': string;
    /**
     * 
     * @type {TradeSide}
     * @memberof ActiveOrderUpdate
     */
    'side': TradeSide;
    /**
     * The leverage of the order in scientific notation with 9 decimal places.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'leverageE9': string;
    /**
     * Indicates if the order is isolated.
     * @type {boolean}
     * @memberof ActiveOrderUpdate
     */
    'isIsolated': boolean;
    /**
     * A unique salt for the order.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'salt': string;
    /**
     * The expiration timestamp of the order in milliseconds.
     * @type {number}
     * @memberof ActiveOrderUpdate
     */
    'expiresAtMillis': number;
    /**
     * The signing timestamp of the order in milliseconds.
     * @type {number}
     * @memberof ActiveOrderUpdate
     */
    'signedAtMillis': number;
    /**
     * The address of the signer of the order request.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'signerAddress': string;
    /**
     * 
     * @type {OrderType}
     * @memberof ActiveOrderUpdate
     */
    'type': OrderType;
    /**
     * Indicates if the order is reduce-only.
     * @type {boolean}
     * @memberof ActiveOrderUpdate
     */
    'reduceOnly': boolean;
    /**
     * Indicates if the order is post-only.
     * @type {boolean}
     * @memberof ActiveOrderUpdate
     */
    'postOnly': boolean;
    /**
     * 
     * @type {OrderTimeInForce}
     * @memberof ActiveOrderUpdate
     */
    'timeInForce': OrderTimeInForce;
    /**
     * The trigger price for stop-limit or stop-market orders.
     * @type {string}
     * @memberof ActiveOrderUpdate
     */
    'triggerPriceE9'?: string;
    /**
     * 
     * @type {OrderStatus}
     * @memberof ActiveOrderUpdate
     */
    'status': OrderStatus;
    /**
     * 
     * @type {SelfTradePreventionType}
     * @memberof ActiveOrderUpdate
     */
    'selfTradePreventionType': SelfTradePreventionType;
    /**
     * The timestamp when the order was placed, in milliseconds.
     * @type {number}
     * @memberof ActiveOrderUpdate
     */
    'createdAtMillis': number;
    /**
     * The timestamp of the last update of the order in milliseconds.
     * @type {number}
     * @memberof ActiveOrderUpdate
     */
    'updatedAtMillis': number;
}



