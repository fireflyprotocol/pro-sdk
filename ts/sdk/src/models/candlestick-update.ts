/* tslint:disable */
/* eslint-disable */
/**
 * Bluefin API
 * Bluefin API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * Represents a candlestick for a specific market and interval.
 * @export
 * @interface CandlestickUpdate
 */
export interface CandlestickUpdate {
    /**
     * The symbol of the market for this candlestick.
     * @type {string}
     * @memberof CandlestickUpdate
     */
    'symbol': string;
    /**
     * The start time of the candlestick in milliseconds since epoch.
     * @type {number}
     * @memberof CandlestickUpdate
     */
    'startTime': number;
    /**
     * The end time of the candlestick in milliseconds since epoch.
     * @type {number}
     * @memberof CandlestickUpdate
     */
    'endTime': number;
    /**
     * The interval of the candlestick (e.g., 1m, 5m, 1h).
     * @type {string}
     * @memberof CandlestickUpdate
     */
    'interval': string;
    /**
     * The opening price of the candlestick.
     * @type {string}
     * @memberof CandlestickUpdate
     */
    'openPriceE9': string;
    /**
     * The closing price of the candlestick.
     * @type {string}
     * @memberof CandlestickUpdate
     */
    'closePriceE9': string;
    /**
     * The highest price during the candlestick interval.
     * @type {string}
     * @memberof CandlestickUpdate
     */
    'highPriceE9': string;
    /**
     * The lowest price during the candlestick interval.
     * @type {string}
     * @memberof CandlestickUpdate
     */
    'lowPriceE9': string;
    /**
     * The total trading volume during the candlestick interval.
     * @type {string}
     * @memberof CandlestickUpdate
     */
    'volumeE9': string;
    /**
     * The total quote volume traded during the candlestick interval.
     * @type {string}
     * @memberof CandlestickUpdate
     */
    'quoteVolumeE9': string;
    /**
     * The number of trades that occurred during the candlestick interval.
     * @type {number}
     * @memberof CandlestickUpdate
     */
    'numTrades': number;
}

