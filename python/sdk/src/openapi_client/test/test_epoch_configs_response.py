# coding: utf-8

"""
    Bluefin API

    Bluefin API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.epoch_configs_response import EpochConfigsResponse

class TestEpochConfigsResponse(unittest.TestCase):
    """EpochConfigsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EpochConfigsResponse:
        """Test EpochConfigsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EpochConfigsResponse`
        """
        model = EpochConfigsResponse()
        if include_optional:
            return EpochConfigsResponse(
                max_interval_number = 14,
                interval_number = 3,
                data = [
                    openapi_client.models.epoch_configs.EpochConfigs(
                        campaign_name = 'TRADE_AND_EARN', 
                        epoch_duration = 604800000, 
                        sui_rewards_allocation_e9 = '200000000000', 
                        blue_rewards_allocation_e9 = '5000000000', 
                        wal_rewards_allocation_e9 = '200000000000', 
                        config = { }, )
                    ]
            )
        else:
            return EpochConfigsResponse(
                max_interval_number = 14,
                interval_number = 3,
                data = [
                    openapi_client.models.epoch_configs.EpochConfigs(
                        campaign_name = 'TRADE_AND_EARN', 
                        epoch_duration = 604800000, 
                        sui_rewards_allocation_e9 = '200000000000', 
                        blue_rewards_allocation_e9 = '5000000000', 
                        wal_rewards_allocation_e9 = '200000000000', 
                        config = { }, )
                    ],
        )
        """

    def testEpochConfigsResponse(self):
        """Test EpochConfigsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
